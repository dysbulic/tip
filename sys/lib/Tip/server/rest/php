<?php
/**
 * Tip Server - Mediates access to a repository of document fragments
 * Author: Will Holcomb <will@dhappy.org>
 * Date: 11 December 2009
 * Version: http://tip.dhappy.org/server/rest/0.1/a

 # ToDo: Google's extended use of the term "beta" on gmail has likely
 # skewed public expectations of beta software. On tip beta release
 # page include a short video explaining that beta software is likely
 # to break and linking to http://help.dhappy.org.

 * This class is coupled with the XMLHTTP client to serve document
 * fragments and maintain the client\'s position in the server-side of
 * the state machine.
 */

/**
 * If no resource was requested, a directory listing should have been
 * generated by Apache.
 *
 * Otherwise, generate a resource id graph.
 */

require_once(".../sys/lib/Tip/src/php");

/*
 * Start by removing any routing information from the front of the string
 */
$baseURIs = array();
array_push($baseURIs, json_decode('{ "pattern" : "http://will.tip.dhappy.org/",    "replacement" : "/" }'));
array_push($baseURIs, json_decode('{ "pattern" : "http://localhost/",              "replacement" : "/" }'));
array_push($baseURIs, json_decode('{ "pattern" : "/~will/",                        "replacement" : "/" }'));
array_push($baseURIs, json_decode('{ "pattern" : "/projects/Tip/src/server/rest/", "replacement" : "/" }'));
array_push($baseURIs, json_decode('{ "pattern" : "index.php\\\\?" }'                                     ));
array_push($baseURIs, json_decode('{ "pattern" : "php\\\\?" }'                                           ));

// ToDo: add __toStrings

$urn = preg_replace('|.*/\.\.\./|', '.../', $_GET['urn']);
//foreach($baseURIs as $baseURI) {
//  $baseURI->subject = $urn;
//  $urn = preg_replace("|^" . $baseURI->pattern . "|", '', $urn);
//}

// If the resource is empty, handoff to the null agent
//if($uri == "") { return require("agents/empty/php"); }

// First see if it is a file
if(file_exists($urn)) {
  $endpoint = preg_replace('|.*/|', '', $urn);
  if(file_exists(".../format/$endpoint/mimetype/utf-8")) {
    $mimetype = file_get_contents(".../format/$endpoint/mimetype/utf-8");
    header("Content-type: $mimetype");
    //header("Content-type: " + file_get_contents(".../format/$endpoint/mimetype/utf-8"));
  }
  if(file_exists(".../format/wrap/$endpoint/php")) {
    // This needs a better structure
    require(".../format/wrap/$endpoint/php");
  } else {
    require($urn);
  }
}

//require('auth.php');

//mysql_connect($host, $user, $pass, $database) or die("Failed to connect to database: " . $database);
?>
