String to compare to is "this"
Strings being compared are:
	"is"
	"really"
	"really"
	"cool"
	"seeing"
	"as"
	"I"
	"think"
	"it"
	"actualy"
	"works"
	"this"
	"that"
	"is"
Stack [0]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	11	0
Stack [1]: Stack is empty.
Stack [2]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	0	2
	0	0	7	2
	0	0	8	2
	0	0	12	2
	0	0	13	2
Stack [3]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	5	3
Stack [4]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	3	4
	0	0	4	4
	0	0	6	4
	0	0	10	4
Stack [5]: Stack is empty.
Stack [6]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	1	6
	0	0	2	6
	0	0	9	6

Calculating the detour for going from (0,0) to (0,1) in string "this"
Calculating the detour for going from (0,0) to (1,0) in string "this"
Calculating the detour for going from (0,0) to (1,1) in string "this"
	Comparing t in "this" with t in "this"

Stack [0]: States in the stack are:
	From 	To 	Id 	Bound
	1	1	11	0
Stack [1]: Stack is empty.
Stack [2]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	0	2
	0	0	7	2
	0	0	8	2
	0	0	12	2
	0	0	13	2
	0	1	11	1
	1	0	11	1
Stack [3]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	5	3
Stack [4]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	3	4
	0	0	4	4
	0	0	6	4
	0	0	10	4
Stack [5]: Stack is empty.
Stack [6]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	1	6
	0	0	2	6
	0	0	9	6

Calculating the detour for going from (1,1) to (1,2) in string "this"
	Comparing t in "this" with h in "this"
Calculating the detour for going from (1,1) to (2,1) in string "this"
	Comparing h in "this" with t in "this"
Calculating the detour for going from (1,1) to (2,2) in string "this"
	Comparing h in "this" with h in "this"

Stack [0]: States in the stack are:
	From 	To 	Id 	Bound
	2	2	11	0
Stack [1]: Stack is empty.
Stack [2]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	0	2
	0	0	7	2
	0	0	8	2
	0	0	12	2
	0	0	13	2
	0	1	11	1
	1	0	11	1
	1	2	11	1
	2	1	11	1
Stack [3]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	5	3
Stack [4]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	3	4
	0	0	4	4
	0	0	6	4
	0	0	10	4
Stack [5]: Stack is empty.
Stack [6]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	1	6
	0	0	2	6
	0	0	9	6

Calculating the detour for going from (2,2) to (2,3) in string "this"
	Comparing h in "this" with i in "this"
Calculating the detour for going from (2,2) to (3,2) in string "this"
	Comparing i in "this" with h in "this"
Calculating the detour for going from (2,2) to (3,3) in string "this"
	Comparing i in "this" with i in "this"

Stack [0]: States in the stack are:
	From 	To 	Id 	Bound
	3	3	11	0
Stack [1]: Stack is empty.
Stack [2]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	0	2
	0	0	7	2
	0	0	8	2
	0	0	12	2
	0	0	13	2
	0	1	11	1
	1	0	11	1
	1	2	11	1
	2	1	11	1
	2	3	11	1
	3	2	11	1
Stack [3]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	5	3
Stack [4]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	3	4
	0	0	4	4
	0	0	6	4
	0	0	10	4
Stack [5]: Stack is empty.
Stack [6]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	1	6
	0	0	2	6
	0	0	9	6

Calculating the detour for going from (3,3) to (3,4) in string "this"
	Comparing i in "this" with s in "this"
Calculating the detour for going from (3,3) to (4,3) in string "this"
	Comparing s in "this" with i in "this"
Calculating the detour for going from (3,3) to (4,4) in string "this"
	Comparing s in "this" with s in "this"

Stack [0]: States in the stack are:
	From 	To 	Id 	Bound
	4	4	11	0
Stack [1]: Stack is empty.
Stack [2]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	0	2
	0	0	7	2
	0	0	8	2
	0	0	12	2
	0	0	13	2
	0	1	11	1
	1	0	11	1
	1	2	11	1
	2	1	11	1
	2	3	11	1
	3	2	11	1
	3	4	11	1
	4	3	11	1
Stack [3]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	5	3
Stack [4]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	3	4
	0	0	4	4
	0	0	6	4
	0	0	10	4
Stack [5]: Stack is empty.
Stack [6]: States in the stack are:
	From 	To 	Id 	Bound
	0	0	1	6
	0	0	2	6
	0	0	9	6


The closest string to this is this
