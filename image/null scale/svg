<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg version="1.0" width="100%" height="100%" viewBox="-80 -80 160 173"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink">
  <defs>
    <path id="star" d="M 0,0 l -3.0902,9.5106 l 8.0902,-5.8779 l -10,0 l 8.0902,5.8779 z" />
    <clipPath id="starclip">
      <rect id="cliprect" x="-53.5" y="67" height="25" width="106.75"/>
    </clipPath>
  </defs>
  <style type="text/css">
    #image { fill: none; stroke-width: 13; }
    #form { stroke: black; }
    #block { stroke: white; }
    #starsbg { fill: #BBB; stroke: #999; stroke-width: .1; }
    #stars { fill-opacity: .9; stroke-width: .1; }
    text { text-anchor: middle; font-size: 75px; font-family: sans-serif;
           opacity: .5; fill: white; stroke: black; display: none; }
  </style>
  <g id="image" transform="rotate(-135)">
    <g id="form">
      <circle cx="0" cy="0" r="60" />
      <line id="bar" x1="0" y1="-80" x2="0" y2="66.25" />
    </g>
    <g id="block">
      <line id="bTop" x1="0" y1="-66" x2="0" y2="-53.25" />
      <line id="bBottom" x1="0" y1="53.25" x2="0" y2="67" />
    </g>
  </g>
  <g id="starsbg">
    <use xlink:href="#star" x="-16.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="-5.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="5.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="16.5" y="70" transform="translate(0,-107),scale(2.5)"/>
  </g>
  <g id="stars" clip-path="url(#starclip)">
    <use xlink:href="#star" x="-16.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="-5.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="5.5" y="70" transform="translate(0,-107),scale(2.5)"/>
    <use xlink:href="#star" x="16.5" y="70" transform="translate(0,-107),scale(2.5)"/>
  </g>
  <text id="text" x="0" y="25">0</text>
  <script type="text/ecmascript"><![CDATA[
    position = 0;
    
    block = {};
    for(var bName in { bTop : '', bBottom : '' }) {
      block[bName] = { min : parseFloat(document.getElementById(bName).getAttribute("y1")),
                       max : parseFloat(document.getElementById(bName).getAttribute("y2")) };
    }
    
    bar = { min : block.bTop.min,
            max : parseFloat(document.getElementById("bar").getAttribute("y2")) };
    
    clipX = parseFloat(document.getElementById("cliprect").getAttribute("x"));
    clipWidth = parseFloat(document.getElementById("cliprect").getAttribute("width"));

    function setPosition(pos) {
      if(pos == undefined) {
        rotation = 0;
        color = "black";
        text = "\u2400";
        newY = -parseFloat(document.getElementById("bar").getAttribute("y1"));
        newClipWidth = 0;
        newClipX = clipX;
      } else {
        pos = Math.max(pos, -1); // no less than -1
        pos = Math.min(pos, 1);  // no more than 1

        rotation = 135 * pos;

        red = pos < 0 ? Math.round(255 * -pos) : 0;
        green = pos > 0 ? Math.round(255 * pos) : 0;
        blue = Math.round(255 * (1 - Math.abs(pos)));
        color = "rgb(" + red + "," + green + "," + blue + ")";

        text = Math.round(pos * 100) / 100;

        newY = bar.max - (1 - ((pos + 1) / 2))  * (bar.max - bar.min);

        starColor = pos > 0 ? "gold" : "black";

        newClipWidth = Math.abs(pos) * clipWidth;
        newClipX = pos > 0 ? clipX : clipX + clipWidth - newClipWidth;
      }
      document.getElementById("image").setAttribute("transform", "rotate(" + rotation + ")");
      document.getElementById("form").style.setProperty("stroke", color, null);
      document.getElementById("text").childNodes[0].data = text;
      document.getElementById("bar").setAttribute("y2", newY);

      for(bName in block) {
        if(newY <= block[bName].min || newY >= bar.max) {
          document.getElementById(bName).style.setProperty("display", "none", null);
        } else {
          document.getElementById(bName).style.setProperty("display", "inline", null);
          document.getElementById(bName).setAttribute("y2", Math.min(newY, block[bName].max));
        }
      }

      document.getElementById("stars").style.setProperty("fill", starColor, null);
      document.getElementById("stars").style.setProperty("stroke", starColor, null);
      document.getElementById("cliprect").setAttribute("x", newClipX);
      document.getElementById("cliprect").setAttribute("width", newClipWidth);

      position = pos;
    }

    var doc = document.rootElement ? document.rootElement : this;
    doc.addEventListener("keypress", keypress, false);
    doc.addEventListener("mousedown", mousedown, false);
    doc.addEventListener("mouseup", mouseup, false);
    doc.addEventListener("mousemove", drag, false);

    // For Opera
    if(!Event.prototype.DOM_VK_LEFT)  Event.prototype.DOM_VK_LEFT = 37;
    if(!Event.prototype.DOM_VK_UP)    Event.prototype.DOM_VK_UP = 38;
    if(!Event.prototype.DOM_VK_RIGHT) Event.prototype.DOM_VK_RIGHT = 39;
    if(!Event.prototype.DOM_VK_DOWN)  Event.prototype.DOM_VK_DOWN = 40;

    delta = .05;
    function keypress(event) {
      if(position == undefined) {
        position = 0;
      }
      if(event.keyCode == event.DOM_VK_LEFT) {
        position -= delta;
      } else if(event.keyCode == event.DOM_VK_RIGHT) {
        position += delta;
      } else if(event.keyCode == event.DOM_VK_UP) {
        position = 0;
      } else if(event.keyCode == event.DOM_VK_DOWN) {
        position = undefined;
      }
      setPosition(position);
      if(window.focus) window.focus();
    }

    origX = null;
    xWindow = 150;

    function mousedown(event) {
      origX = event.clientX - position * xWindow;
    }

    function mouseup(event) {
      origX = null;
    }

    function drag(event) {
      if(origX != null) {
        setPosition((event.clientX - origX) / xWindow);
      }
    }

    setPosition(position);
  ]]></script>
</svg>
