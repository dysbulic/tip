<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tip="http://dhappy.org/tip/0.1/a"
      xmlns:var="tip:core/var"
      xml:lang="en">
  <head>
    <title><var:title/></title>
    <link rel="stylesheet" type="text/css" href="~/media/style/thesis.css" />
    <script type="text/javascript" src=".../sys/lib/jquery/dev/dist/jquery.js"/>
    <script type="text/javascript" src=".../sys/lib/tip/src/$.jquery"/>
    <style type="text/css">
      [data="reference node.svg"] { height: 100px; }
      [data="example/filesystem/.../org/DoH/logo.svg"] { height: 250px; }
      [data="example/addition.svg"] { height: 250px; }
    </style>
  </head>
  <body>
    <section>
      <h1><var:title>Neo4j Taversals</var:title></h1>
      <h2><var:author>Will Holcomb</var:author></h2>

      <p>I'm trying to come up with an algorithm for computing a filesystem-esque hierarchy from a graph database. I need to put it in terms of a <a href="http://api.neo4j.org/current/org/neo4j/graphdb/Traverser.html">traverser</a> for <a href="http://neo4j.org">Neo4j</a>. The structure starts with the <a href="http://api.neo4j.org/current/org/neo4j/graphdb/GraphDatabaseService.html">graph database service</a>'s "<a href="http://api.neo4j.org/current/org/neo4j/graphdb/GraphDatabaseService.html#getReferenceNode%28%29">reference node</a>":</p>

      <object type="image/svg+xml" data="reference node.svg"/>
        
      <p>Every traversal in Neo4j begins at a node. There are two ways to enter an existing graph: <a href="http://api.neo4j.org/current/org/neo4j/graphdb/GraphDatabaseService.html#getNodeById(long)">lookup by identifier</a> or the <a href="http://api.neo4j.org/current/org/neo4j/graphdb/GraphDatabaseService.html#getReferenceNode%28%29">reference node</a> which is defined immutably for each database.</p>
      
      <p>My current project is simply to traverse a filesystem and mirror that structure in the database. I have a driver to <a href="http://projects.will.madstones.com/mimis/src/main/java/org/dhappy/mimis/FileLoader.java">walk the filesystem</a>, <a href="http://projects.will.madstones.com/mimis/src/main/java/org/dhappy/mimis/SaveSpot.java">parse <acronym title="Extensible Markup Language">XML</acronym></a>, and <a href="http://projects.will.madstones.com/mimis/src/main/java/org/dhappy/mimis/Mimis.java">save to the database</a>.</p>

      <p>From the reference node, there are a set of forward links in a <a href="http://wiki.github.com/tinkerpop/gremlin/neo4j-graph-database">property graph</a> to the document location. For example:</p>

      <object type="image/svg+xml" data="example/filesystem/.../org/DoH/logo.svg"/>

      <p>Multiple paths are added discretely:</p>

      <object type="image/svg+xml" data="example/addition.svg"/>
      
      <p>As opposed to:</p>

      <object type="image/svg+xml" data="example/addition error.svg"/>

      <p>For this graph, a "<code>list traversal</code>", takes a <code>string</code> and <code>regex</code> as input and traverses the graph according to the matches.</p>
      
      <pre></pre>

      <p>The final set of nodes must be either all <code style="color: green">separator</code>s or all <code style="color: brown">identifier</code>s. If it is all separators, then the return list is a conjunction of the child </p>
    </section>
  </body>
</html>
