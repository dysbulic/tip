<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:tip="http://dhappy.org/tip/0.1/a" xml:lang="en">
  <head>
    <title>Transformation Basics</title>
    <link rel="stylesheet" type="text/css" href="doh.css" />
    <link rel="stylesheet" type="text/css" href="doh_ie.css" tip:browser="ie"/>
    <style type="text/css">
      body { max-width: 750px; margin: auto; }
      .head h1, .head h2 { text-align: center; }
      hr { width: 50%; }
      object { width: 100%; }
      [data='simple_html_tree.svg'] { height: 200px; }
      [data='traversal_to_messages.svg'] { height: 450px; }
    </style>
  </head>
  <body>
    <div class="head">
      <h1>Transformation Basics</h1>
      <h2><a href="mailto:Will%20Holcomb%20%3Cwill@dhappy.org%3E">Will Holcomb</a></h2>
      <h2>26 January 2010</h2>
    </div>
    
    <p>I mentioned previously, the idea of <a href="../organizing_information/">extending a content tree with template trees</a>. There are two types of systems that manipulate these types of trees, in-memory and streaming. In-memory builds a full representation of the tree in the computer whereas streaming deals with the tree as a series of messages generated by a traversal.</p>

    <p>Consider this <a href="simple_html_tree.svg"><acronym title="Hypertext Markup Language">HTML</acronym> tree</a>:</p>

    <object type="image/svg+xml" data="simple_html_tree.svg"></object>

    <!--more-->

    <p>Traversing the tree means visiting the nodes in order. For stream processing, the travesal is generally "<a href="http://en.wikipedia.org/wiki/Depth-first_search">depth-first</a>" meaning the traversal works its way across going as deep as possible in each node:</p>

    <object type="image/svg+xml" data="traversal_to_messages.svg"></object>

    <p>There are three types of events:</p>
    
    <ul>
      <li>Entering a node</li>
      <li>Exiting a node</li>
      <li>Reaching text</li>
    </ul>

    <p>The stream of events is "isomorphic" to the tree meaning that the essential information about the relationships of the data is preserved. You can construct the messages from the tree and vice-versa:</p>

    <object type="image/svg+xml" data="tree_building.svg"></object>
    
  </body>
</html>
