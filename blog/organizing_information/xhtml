<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:tip="http://dhappy.org/tip/0.1/a" xml:lang="en">
  <head>
    <title></title>
    <link rel="stylesheet" type="text/css" href="doh.css" />
    <link rel="stylesheet" type="text/css" href="doh_ie.css" tip:browser="ie"/>
    <!--[if IE]>
      <script type="text/javascript" src="svgweb/src/svg-uncompressed.js" data-path="svgweb/src" data-htc-filename="svg-htc.php"></script>
    <![endif]-->
    <script type="text/javascript" src=".../sys/lib/jquery/current/jquery.js"></script>
    <script type="text/javascript" src="load_externals.js"></script>
    <style type="text/css">
      body { max-width: 750px; margin: auto; }
      .head h1, .head h2 { text-align: center; }
      object { width: 100%; }
      .rowimage { max-width: 100%; }
      [data='simple_php_tree.svg'], [data='simple_templ_tree.svg'] { height: 200px; }
      [data='content_tree.svg'] { height: 225px; }
      [data='dynamic_content_tree.svg'] { height: 250px; }
      [data='combined_templ_tree.svg'] { height: 300px; }
      hr { width: 50%; }
    </style>
  </head>
  <body>
    <div class="head">
      <h1></h1>
      <h2><a href="mailto:Will%20Holcomb%20%3Cwill@dhappy.org%3E">Will Holcomb</a></h2>
      <h2>22 January 2010</h2>
    </div>

    <p><em>Every time I write this down, I dislike how it sounds, so I'm going to brainstorm for a while.</em></p>

    <p><a href="../templating_basics/">Templates</a> build composite documents from constituent documents. The example that I mentioned previously was:</p>

<pre>&lt;html>
  &lt;head>&lt;title>Greeting&lt;/title>&lt;/head>
  &lt;body>&lt;p>Hello &lt;?php print $name ?>&lt;/p>&lt;/body>
&lt;/html></pre>

    <p>Which can be represented as a tree by:</p>

    <object type="image/svg+xml" data="simple_php_tree.svg"></object>

    <p>What I would like to explore is a templating system that is drawing from a content tree which organizes binary strings.</p>

    <!--more-->

    <p>For example, the previous example might be written as:</p>

<pre>&lt;html>
  &lt;head>&lt;title>Greeting&lt;/title>&lt;/head>
  &lt;body>&lt;p>Hello &lt;templ:var name="user/name/first" />&lt;/p>&lt;/body>
&lt;/html></pre>

    <p>So there are now two trees, the template and the content:</p>

    <object type="image/svg+xml" data="simple_templ_tree.svg"></object>

    <p>The content tree is simply a method of organizating binary strings, so the template also has a location in that tree:</p>

    <object type="image/svg+xml" data="combined_templ_tree.svg"></object>
    
    <p>"Strings" are any list of '0's and '1's, so the tree contains not only text but also other types of media as well:</p>

    <object type="image/svg+xml" data="content_tree.svg"></object>

    <p>So this basic idea can be expanded for larger trees.</p>

    <object type="image/svg+xml" data="dynamic_content_tree.svg"></object>

    <p>So, imagine that I would like to create a repository of strings that is collaboratively maintained. For example, <a href="http://magnatune.com">Magnatune</a> or <a href="http://openclipart.org">Open Clip Art</a>. Each user has their own content tree that they are able to edit without restriction.</p>

<!--
    <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
      var pageTracker = _gat._getTracker("UA-2592249-5");
      pageTracker._initData();
      pageTracker._trackPageview();
    </script>
-->
  </body>
</html>
