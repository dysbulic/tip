<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
 "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tip="http://dhappy.org/tip/0.1/a"
      xmlns:var="tip:core/var"
      xml:lang="en">
  <head>
    <title><var:title><acronym title="Google Summer of Code">GSOC</acronym> Proposal to Infogrid</var:title></title>
    <link rel="stylesheet" type="text/css" href="~/media/style/thesis.css" />
    <script type="text/javascript" src="~/lib/jquery/dist/jquery.js"/>
    <script type="text/javascript" src="tip/src/$.jquery"/>
    <style type="text/css">
      #htmldom object, #htmltraverse object, #cals object { height: 300px; }
    </style>
  </head>
  <body>
    <header>
      <hgroup>
        <h1><var:title/></h1>
        <h2><a href="mailto:Will%20Holcomb%20%3Cwill@dhappy.org%3E">Will Holcomb</a></h2>
        <h2>3 March 2010</h2>
      </hgroup>
    </header>

    <section id="intro">
      <title>Introduction</title>

      <p></p>
    </section>

    <section id="sys">
      <title>System</title>

      <p></p>
    </section>

    <section id="gsoc">
      <title>Proposal</title>

      <p></p>
    </section>

    <section id="motivation">
      <title>Motivation</title>

      <p>Consider a graph of world food production based on <acronym title="United Nations">UN</acronym> <acronym title="FAO">Food and Agriculture Organization</acronym> statistics:</p>

      <figure id="copiedcals">
        <caption>Per capita calories produced per day</caption>
        <object type="image/svg+xml" data="calories per capita/per/time/graph.svg"/>
      </figure>

      <p><figure href="#copiedcals"/> is a reproduction of a <acronym title="Joint Photographic Experts Group">jpeg</acronym> image taken from <a href="http://freedom21.org">Freedom21</a>'s <a href="http://freedom21.org/alternative/chapter5b.html"><cite>Meeting Essential Human Needs: Part 2</cite></a>.</p>

      <figure id="origcals">
        <caption>Original source for <figure href="#copiedcals"/></caption>
        <img src="http://freedom21.org/alternative/5b-3.jpg" alt="Calories Available for Daily Consumption" />
      </figure>

      <figure id="origcalcaption">
        <caption>Source caption for <figure href="#origcals"/></caption>
        <p><b>Figure 3</b> Total food production in calories per person per day is more has increased by 25 percent since 1961 and is more than sufficient to feed every person on earth 2800 calories per day. Source: FAOSTAT Agriculture Data: Food Supply, Crops, Primary Equivalent. February, 2004.</p>
        <p><a href="http://faostat.fao.org/faostat/collections?subset=agriculture">http://faostat.fao.org/faostat/collections?subset=agriculture</a></p>
      </figure>
      
      <p>According to the <a href="#origcalcaption">caption</a> on the <a href="#origcals">source image</a>, the data was drawn from <a href="http://faostat.fao.org">FAOStat</a>. However, the current site only provides per country per capita calorie production. It isn't possible to produce a global graph from those numbers without knowing the population of each country.</p>

      <p>A researcher working now can't tell if in 2004 <a href="http://faostat.fao.org">FAOStat</a> provided access to different figures or if the graph was produced from some other source.</p>

      <p>This issue is fundamental to the client-server model that underlies <acronym title="HTML"/>. Data reputability flows from organizational reputability by way of the originating server. Derivative works can link back to the source <acronym title="Uniform Resource Locator">URL</acronym>, but there is no guarantee that the contents will not change. The only method to guarantee access to source materials is to make a copy, and even then it is not possible to access the underlying data.</p>
    </section>

    <section id="tech">
      <title>Constituent and Related Technologies</title>

      <section>
        <title><acronym title="XML">Extensible Markup Language</acronym></title>

        <p><acronym title="XML"/> is a set of formatting rules for structuring metainformation languages for text data. Source documents are ordered into trees by the addition of balanced "tags."</p>

        <figure id="htmlsource">
          <caption><acronym title="HTML">Hypertext Markup Language</acronym> Fragment</caption>
          <p><![CDATA[<p>This paragraph contains <i>italicized text</i>!</p>]]></p>
        </figure>

        <figure id="htmlrender">
          <caption>Rendering of <figure href="#htmlsource"/></caption>
          <p>This paragraph contains <i>italicized text</i>!</p>
        </figure>

        <p><figure href="#htmlsource"/> and <figure href="#htmlrender"/> show the source and rendered versions of a <acronym title="HTML"/> string. The <a href="#htmlsource">fragment</a> begins and ends with "paragraph" (<code>p</code>) tags which represent semantically that all the contained text is a single paragraph. Similarly, the "italic" tags delineate a section of the string to italicize.</p>

        <p><acronym title="XML"/> tags are <a href="http://www.w3.org/TR/REC-xml">required</a> to be evenly balanced and with a single root tag which means <acronym title="XML"/> documents are representable as trees. A standard isomorphism named the <acronym title="DOM">Document Object Model</acronym> is <a href="http://www.w3.org/DOM/">defined</a> by the <acronym title="World Wide Web Consortium">W3C</acronym> which also defines <acronym title="XML"/>.</p>

        <p>A <acronym title="DOM"/> tree, is ordered and there are several types of nodes, including elements and text.</p>

        <figure id="htmldom">
          <caption><figure href="#htmlsource"/> represented as a <acronym title="DOM"/> tree</caption>
          <object type="image/svg+xml" data="htmldom.svg"/>
        </figure>
      </section>

      <section id="sax">
        <title><acronym title="SAX">Simple API for XML Processing</acronym></title>

        <p><acronym title="SAX"/> is a method for transforming <acronym title="XML"/> trees based on processing a series of messages isomorphic to the document tree rather than building a structure in memory. Events are generated when elements are entered or exited, and when text is reached (text nodes do not have children):</p>

        <figure id="htmltraverse">
          <caption>A <acronym title="SAX"/> traversal of <figure href="#htmldom"/></caption>
          <object type="image/svg+xml" data="html_sax_traverse.svg"/>
        </figure>

        <figure id="htmlevents">
          <caption>Events produced by traversal depicted in <figure href="#htmltraverse"/></caption>
          <object type="image/svg+xml" data="html_sax_traverse_events.svg"/>
        </figure>
      </section>
      
      <section id="sha">
        <title><acronym title="SHA">Simple Hash Algorithm</acronym></title>

        <p><em>ToDo: Describe <a href="http://en.wikipedia.org/wiki/SHA_hash_functions#SHA-0_and_SHA-1"><acronym title="SHA"/>-1</a></em></p>

        <figure id="sha1">
          <caption>One iteration of the <acronym title="SHA"/>-1 hash</caption>
          <object type="image/svg+xml" data="http://upload.wikimedia.org/wikipedia/commons/e/e2/SHA-1.svg" style="height: 380px; width: 365px;"/>
        </figure>
      </section>
      
      <section id="git">
        <title><acronym title="Global Information Tracker">Git</acronym> Commit Tracking</title>

        <p><acronym title="Git"/> is a distributed version control system which uses a novel structure for creating verifiable trees.</p>

        <p><em>ToDo: Draw In-depth explanation with diagrams</em></p>

        <p><acronym title="Git"/> is designed for managing versions of filesystem trees. It begins with the files and generates <acronym title="SHA"/>-1 hashes of those. Then it walks up the tree generating a hash of the names and child hashes for each node. When the root is reached, a single hash is left that can only be regenerated if all of the contents of the entire tree are reproduced. This allows for the verification of data hierarchies using a single value.</p>
      </section>

      <section id="sigs">
        <title>Cryptographic Signatures</title>

        <p>Cryptographic signatures are a method of verifying identity in a virtual environment. An individual creates a pair of large prime numbers, and computes a function on a bit string whose value allows a party to verify that either of the primes was used. One of the numbers is released along with the signature, and the other, so long as it is kept secret, provides a method of identity verification.</p>
      </section>

      <section id="pubsub">
        <title><acronym title="pub/sub">Publish/Subscribe</acronym> Networks</title>

        <p><acronym title="Pub/sub"/> is a type of <acronym title="P2P">peer-to-peer</acronym> where peers can register subscriptions with the network and conditionally receive content entering the network that meets matching criteria.</p>
      </section>

      <section id="freenet">
        <title>Freenet</title>

        <p>Freenet is a <acronym title="P2P"/> network which uses opportunistic caching. Once information enters the network it has no fixed origin, rather it is copied and cached according to metrics involving latency, bandwidth, and cache state.</p>

        <p>Because Freenet's caching is based on request frequence, response time decreases in response to popularity, as opposed to server-based solutions where there is competition for a single resource.</p>
      </section>

      <section id="sameorigin">
        <title>Same-Origin Policy</title>

        <p>The same-origin policy is a security measure implemented in all modern browsers. It restricts programmatic access of loaded elements to elements from the same server in order to protect sensitive information.</p>

        <p><em>ToDo: Cross-site scripting attack example</em></p>

        <p><em>ToDo: Prevented legitimate use example</em></p>
      </section>
    </section>

    <section id="proposal">
      <title>Proposed System</title>

      <p>The underlying data structure for producing a particular series of <acronym title="SAX"/> events does not have to be an <acronym title="XML"/> document. The structure that I would like to explore for my thesis is generating content by traversing a multi-user graph database.</p>

      <p>The graph database contains <acronym title="DOM"/> trees as well as structured data. <acronym title="SAX"/> events are produced by traversing the database, but data authenticity is provided through cryptographic signatures rather than originating server. This means that nodes can be reproduced without diminishing trust.</p>

      <p>If the <a href="#motivation">motivating example</a> were prepared in this system, the original data would have been present in the graph. The selector for the desired set might look like:</p>

      <figure id="faodata">
        <caption>A dataset selector graph</caption>
        <object type="image/svg+xml" data="fao_data_graph.svg"/>
      </figure>

      <p>The graph is then generated from the retrieved dataset in the form of a <acronym title="Scalable Vector Graphic">SVG</acronym>, which is an <acronym title="XML"/> format for describing vector graphics:</p>

      <figure id="svgdom">
        <caption>Example <acronym title="SVG"/> <acronym title="DOM"/> tree</caption>
        <object type="image/svg+xml" data="svgdom.svg"/>
      </figure>

      <p>The root of this tree is linked to in the database and the user is able to add nodes and edges to annotate the diagram:</p>

      <figure id="cals">
        <caption>Per capita calories produced per day</caption>
        <object type="image/svg+xml" data="calories per capita/per/time/graph.svg"/>
      </figure>

      <p>When the figure is referenced from another document, a link is added to the graph database and the source graph can be referenced directly.</p>

      <p>Graphs are added to the database and a <a href="#git"><acronym title="Git"/>-like hash can be calculated allowing the subgraph to be copied through a <acronym title="pub/sub"/> network.</a></p>

      <p>The end result would be similar to <a href="#freenet">Freenet</a>, with the addition of persistent sources for information. (<em>Freenet does not store the source of data items to protect publisher anonymity.</em>)</p> 

      <ul>
        <li>Opportunistic caching which means that the more popular a piece of information, the more distributed it is in the network</li>
        <li>Sub-document references allow greater granularity in how information is linked</li>
      </ul>
    </section>

    <section id="later">
      <title>Further Work</title>

      <section>
        <title>Conditional Traversal</title>
      
        <p>Conditional traversal allows for generating custom content based on user preferences.</p>

        <p><em>ToDo: Diagrams&hellip;</em></p>
      </section>

      <section>
        <title>Municipal Deployment</title>

        <p>One particularly interesting deployment scenario for this type of network would be to provision a municipal mesh network&hellip;</p>
      </section>
    </section>
<!--
    <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
    </script>
    <script type="text/javascript">
      var pageTracker = _gat._getTracker("UA-2592249-5");
      pageTracker._initData();
      pageTracker._trackPageview();
    </script>
-->
  </body>
</html>
